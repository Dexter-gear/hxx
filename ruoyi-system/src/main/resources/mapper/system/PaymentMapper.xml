<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.PaymentMapper">
    
    <resultMap type="Payment" id="PaymentResult">
        <result property="paymentId"    column="payment_id"    />
        <result property="orderId"    column="order_id"    />
        <result property="paymentMethod"    column="payment_method"    />
        <result property="paymentAmount"    column="payment_amount"    />
        <result property="paymentTime"    column="payment_time"    />
    </resultMap>

    <sql id="selectPaymentVo">
        select payment_id, order_id, payment_method, payment_amount, payment_time from payment
    </sql>

    <select id="selectPaymentList" parameterType="Payment" resultMap="PaymentResult">
        <include refid="selectPaymentVo"/>
        <where>  
            <if test="orderId != null "> and order_id = #{orderId}</if>
            <if test="paymentMethod != null  and paymentMethod != ''"> and payment_method = #{paymentMethod}</if>
            <if test="paymentAmount != null "> and payment_amount = #{paymentAmount}</if>
            <if test="paymentTime != null "> and payment_time = #{paymentTime}</if>
        </where>
    </select>
    
    <select id="selectPaymentByPaymentId" parameterType="Long" resultMap="PaymentResult">
        <include refid="selectPaymentVo"/>
        where payment_id = #{paymentId}
    </select>

    <insert id="insertPayment" parameterType="Payment" useGeneratedKeys="true" keyProperty="paymentId">
        insert into payment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="orderId != null">order_id,</if>
            <if test="paymentMethod != null and paymentMethod != ''">payment_method,</if>
            <if test="paymentAmount != null">payment_amount,</if>
            <if test="paymentTime != null">payment_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="orderId != null">#{orderId},</if>
            <if test="paymentMethod != null and paymentMethod != ''">#{paymentMethod},</if>
            <if test="paymentAmount != null">#{paymentAmount},</if>
            <if test="paymentTime != null">#{paymentTime},</if>
         </trim>
    </insert>

    <update id="updatePayment" parameterType="Payment">
        update payment
        <trim prefix="SET" suffixOverrides=",">
            <if test="orderId != null">order_id = #{orderId},</if>
            <if test="paymentMethod != null and paymentMethod != ''">payment_method = #{paymentMethod},</if>
            <if test="paymentAmount != null">payment_amount = #{paymentAmount},</if>
            <if test="paymentTime != null">payment_time = #{paymentTime},</if>
        </trim>
        where payment_id = #{paymentId}
    </update>

    <delete id="deletePaymentByPaymentId" parameterType="Long">
        delete from payment where payment_id = #{paymentId}
    </delete>

    <delete id="deletePaymentByPaymentIds" parameterType="String">
        delete from payment where payment_id in 
        <foreach item="paymentId" collection="array" open="(" separator="," close=")">
            #{paymentId}
        </foreach>
    </delete>
</mapper>