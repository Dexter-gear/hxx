<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.CommentMapper">
    
    <resultMap type="Comment" id="CommentResult">
        <result property="commentId"    column="comment_id"    />
        <result property="productId"    column="product_id"    />
        <result property="userId"    column="user_id"    />
        <result property="rating"    column="rating"    />
        <result property="commentText"    column="comment_text"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectCommentVo">
        select comment_id, product_id, user_id, rating, comment_text, create_time, update_time from comment
    </sql>

    <select id="selectCommentList" parameterType="Comment" resultMap="CommentResult">
        <include refid="selectCommentVo"/>
        <where>  
            <if test="productId != null "> and product_id = #{productId}</if>
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="rating != null "> and rating = #{rating}</if>
            <if test="commentText != null  and commentText != ''"> and comment_text = #{commentText}</if>
        </where>
    </select>
    
    <select id="selectCommentByCommentId" parameterType="Long" resultMap="CommentResult">
        <include refid="selectCommentVo"/>
        where comment_id = #{commentId}
    </select>

    <insert id="insertComment" parameterType="Comment" useGeneratedKeys="true" keyProperty="commentId">
        insert into comment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="productId != null">product_id,</if>
            <if test="userId != null">user_id,</if>
            <if test="rating != null">rating,</if>
            <if test="commentText != null">comment_text,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="productId != null">#{productId},</if>
            <if test="userId != null">#{userId},</if>
            <if test="rating != null">#{rating},</if>
            <if test="commentText != null">#{commentText},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateComment" parameterType="Comment">
        update comment
        <trim prefix="SET" suffixOverrides=",">
            <if test="productId != null">product_id = #{productId},</if>
            <if test="userId != null">user_id = #{userId},</if>
            <if test="rating != null">rating = #{rating},</if>
            <if test="commentText != null">comment_text = #{commentText},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where comment_id = #{commentId}
    </update>

    <delete id="deleteCommentByCommentId" parameterType="Long">
        delete from comment where comment_id = #{commentId}
    </delete>

    <delete id="deleteCommentByCommentIds" parameterType="String">
        delete from comment where comment_id in 
        <foreach item="commentId" collection="array" open="(" separator="," close=")">
            #{commentId}
        </foreach>
    </delete>
</mapper>